//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics;
using System.Linq;
using System.Runtime.Remoting.Messaging;
using MedCardWeb.Areas._Public;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Globalization;
using MedCardWeb.Areas._Public;
namespace MedCardWeb
{
    

    public partial class User
    {
        public User()
        {
            this.MedCards = new HashSet<MedCard>();
        }
    
        public int Id { get; set; }
        public string firsеName { get; set; }
        public string lastName { get; set; }
        public Nullable<System.DateTime> dateBirth { get; set; }

        [Required(ErrorMessage = "Поле статус не было заполнено", AllowEmptyStrings = false)]
        public string status { get; set; }

       
        [MyVerefiLogin(ErrorMessage = "Логин существует")]
        public string login { get; set; }

        [Required(ErrorMessage = "Поле email не заполненной, или значение уже существует", AllowEmptyStrings = false)]
        [RegularExpression(@"^([0-9a-zA-Z]([\+\-_\.][0-9a-zA-Z]+)*)+@(([0-9a-zA-Z][-\w]*[0-9a-zA-Z]*\.)+[a-zA-Z0-9]{2,3})$", ErrorMessage = "Поле email не валидно")]
        public string email { get; set; }

        public string ConfirMail { get; set; }

        [Required(ErrorMessage = "Поле пароль не было заполнено", AllowEmptyStrings = false)]
        [DataType(System.ComponentModel.DataAnnotations.DataType.Password)]
        [StringLength(15, MinimumLength = 8, ErrorMessage = "Полю пароль разрешено от 8 до 15 символов")]
        public string pass { get; set; }

        [Compare("pass", ErrorMessage = "Пороли не совподают")]
        [DataType(System.ComponentModel.DataAnnotations.DataType.Password)]
        public string ConfirmPass { get; set; }

    
        public virtual ICollection<MedCard> MedCards { get; set; }
    }

   
















    
}


